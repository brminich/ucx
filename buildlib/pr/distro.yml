jobs:
    # Perform test builds on relevant distributions.
  - job: Distros
    displayName: Build for distros
    workspace:
      clean: all
    pool:
      name: MLNX
      demands:
      - ucx_docker -equals yes
    strategy:
      matrix:
        centos7:
          CONTAINER: centos7
          CONFIGURE_OPTS:
    container: $[ variables['CONTAINER'] ]
    steps:
      - checkout: self
        clean: true
        fetchDepth: 100

      - bash: |
          set -eE
          . buildlib/tools/common.sh
          prepare_build
          ${WORKSPACE}/configure $(CONFIGURE_OPTS) --prefix=$(Build.Repository.LocalPath)/install
          gcc -v
          make -s -j `nproc`
          make install
        displayName: Build ucx artifact

      - task: CopyFiles@2
        displayName: 'Copy current UCX version'
        inputs:
          sourceFolder: '$(Build.Repository.LocalPath)/install'
          contents: |
            **
          targetFolder: '$(Build.ArtifactStagingDirectory)/current'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: ucx_bin_$(Build.BuildId)

  - job: Test_wire_compatibility_cs
    dependsOn: Distros
    displayName: Test wire compatibility (client-server)
    workspace:
      clean: all
    pool:
      name: MLNX
      demands:
      - ucx_docker -equals yes
    strategy:
      matrix:
        ucx1_12:
            ucx_tag: v1.12.0
        ucx1_14:
            ucx_tag: v1.14.0
    container: centos7_ib
    steps:
      - checkout: none
        clean: true
      - task: DownloadBuildArtifacts@0
        displayName: 'Download Build Artifacts'
        inputs:
          artifactName: ucx_bin_$(Build.BuildId)
          downloadPath: $(System.DefaultWorkingDirectory)
      - bash: chmod u+rwx $(System.DefaultWorkingDirectory)/ucx_bin_$(Build.BuildId) -R
      - bash: |
          set -Eex
          git clone --depth 1 -b ${UCX_TAG} https://github.com/openucx/ucx.git $(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}
          cd $(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}
          ucx_dir=${PWD}/install
          ./autogen.sh
          ./contrib/configure-release --enable-debug-data --prefix=${ucx_dir}
          make -s -j `nproc`
          make install -s -j `nproc`

          mkdir -p ${ucx_dir}/examples
          cd $(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}/examples
          gcc -lm -lucs -lucp -I${ucx_dir}/include -L${ucx_dir}/lib -o ${ucx_dir}/examples/client_server ucp_client_server.c
        env:
            UCX_TAG: $(ucx_tag)
      - bash: |
          set -Eex
          port=$((10000 + (1000 * ${AZP_AGENT_ID})))
          export UCX_LOG_LEVEL=info
          client_server=$(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}/install/examples/client_server
          ldd $client_server
          LD_LIBRARY_PATH=$(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}/install/lib ${client_server} -c tag -p $port &
          server_pid=$!
          sleep 5
          LD_LIBRARY_PATH=$UCX_PR_LIB_PATH ${client_server} -c tag -p $port -a 127.0.0.1
          kill -9 $server_pid
        env:
          UCX_PR_LIB_PATH: $(System.DefaultWorkingDirectory)/ucx_bin_$(Build.BuildId)/current/lib
          UCX_TAG: $(ucx_tag)
        displayName: Test server is legacy client is master
      - bash: |
          set -Eex
          port=$((10000 + (1000 * ${AZP_AGENT_ID})))
          export UCX_LOG_LEVEL=info
          client_server=$(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}/install/examples/client_server
          ldd $client_server
          LD_LIBRARY_PATH=${UCX_PR_LIB_PATH} ${client_server} -c tag -p $port &
          server_pid=$!
          sleep 5
          LD_LIBRARY_PATH=$(System.DefaultWorkingDirectory)/ucx-${UCX_TAG}/install/lib ${client_server} -c tag -p $port -a 127.0.0.1
          kill -9 $server_pid
        env:
          UCX_PR_LIB_PATH: $(System.DefaultWorkingDirectory)/ucx_bin_$(Build.BuildId)/current/lib
          UCX_TAG: $(ucx_tag)
        displayName: Test server is master client is ${UCX_TAG}
        timeoutInMinutes: 5
